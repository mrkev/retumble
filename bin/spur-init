#!/usr/bin/env node

const program       = require('commander');
const get_remote    = require('request-promise');
const copydir       = require('copy-dir');
const path          = require('path');
const execa = require('execa');
const fs = require('fs');
const download = require('download');
var tmp = require('tmp');
var unzip = require('unzip')
var dirCopy = require('directory-copy')


program
  .usage('<options> [name]')
  .option('-i, --in-dir', 'not implemented')
  .parse(process.argv);

let target = 'project'
if (program.inDir) {
  target = '.'
} else if (program.args.length > 0) {
  target = program.args[0]
}

let source = path.join(__dirname, '../node_modules/react-blank')
var tmpobj = tmp.dirSync();
console.log("Dir: ", tmpobj.name);

 
download('https://github.com/mrkev/react-blank/archive/master.zip', tmpobj.name)
.then(() => {
  fs
  .createReadStream(tmpobj.name + '/react-blank-master.zip')
  .pipe(unzip.Extract({ path: tmpobj.name }))

  setTimeout(() => {
    const src = path.join(tmpobj.name, '/react-blank-master')
    dirCopy({ src, dest: target }, () => console.log('done!'))
  }, 1000)
})
.catch(console.error)

// copydir.sync(source, target)

// execa(`cd`, [`${target}`])
// .then(x => {
//   console.log('installing')
//   const install = execa('npm', ['install'])
//   install.stdout.pipe(process.stdout)
//   install.stderr.pipe(process.stderr)
//   return install
// })
// .catch(console.error)

